// Generated by CoffeeScript 1.10.0
(function() {
  var S, TimeItem, WorkDayParserSettings, _;

  TimeItem = require('./timeitem');

  _ = require('lodash');

  S = require('string');

  WorkDayParserSettings = (function() {
    WorkDayParserSettings.insertDayBreak;

    WorkDayParserSettings.dayBreakTime;

    WorkDayParserSettings.dayBreakDurationTime;

    WorkDayParserSettings.dayBreakDurationInMinutes;

    WorkDayParserSettings.shortCuts;

    WorkDayParserSettings.shortCutGroups;

    function WorkDayParserSettings() {
      this.shortCutGroups = [];
      this.shortCuts = [];
    }

    WorkDayParserSettings.prototype.allCurrentShortcuts = function() {
      return this.getValidShortCuts(0);
    };

    WorkDayParserSettings.prototype.getValidShortCuts = function(from) {
      var all;
      all = this.shortCuts;
      return this.validShortCuts(all, from);
    };

    WorkDayParserSettings.prototype.validShortCuts = function(allShortcuts, testDate) {
      var groupedByExpansionType, groupedByKey, i, j, key, keyedShortcut, lastOrDefault, len, len1, ref, ref1, ret, type, typeShortcut;
      ret = [];
      groupedByKey = _(allShortcuts).groupBy(function(sc) {
        return sc.key;
      });
      console.log("-=-=-=-=-=-=-=-=-=-=-=-");
      ref = groupedByKey.keys().value();
      for (i = 0, len = ref.length; i < len; i++) {
        key = ref[i];
        keyedShortcut = groupedByKey.value()[key];
        console.log(JSON.stringify(keyedShortcut) + " | " + key + " | " + _.size(keyedShortcut));
        if (_.size(keyedShortcut) > 1) {
          groupedByExpansionType = _(keyedShortcut).groupBy(function(sc) {
            return sc.wholeDayExpansion;
          });
          console.log("" + (JSON.stringify(groupedByExpansionType)));
          console.log("" + (JSON.stringify(groupedByExpansionType.keys().value())));
          ref1 = groupedByExpansionType.keys().value();
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            type = ref1[j];
            typeShortcut = groupedByExpansionType.value()[type];
            console.log("" + (JSON.stringify(typeShortcut)));
            lastOrDefault = _(_.sortBy(typeShortcut, 'validFrom')).first();
            console.log("L O D");
            console.log(JSON.stringify(lastOrDefault));
            console.log("???");
            if (lastOrDefault != null) {
              ret.push(lastOrDefault);
            }
          }
        } else {
          ret.push(keyedShortcut[0]);
        }
      }
      return ret;
    };

    WorkDayParserSettings.prototype.addShortCut = function(shortCut) {
      return this.shortCuts.push(shortCut);
    };

    return WorkDayParserSettings;

  })();

  module.exports = WorkDayParserSettings;

}).call(this);
