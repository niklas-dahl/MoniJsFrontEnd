// Generated by CoffeeScript 1.10.0
(function() {
  var S, WorkDay, moment;

  moment = require('moment');

  S = require('string');

  WorkDay = (function() {
    WorkDay.prototype.dayType = 'WORKDAY';

    WorkDay.prototype.specialDay = '';

    WorkDay.prototype.items = [];

    function WorkDay(year, month, day, specialDays1) {
      var ref;
      this.year = year;
      this.month = month;
      this.day = day;
      this.specialDays = specialDays1;
      this.m = moment([this.year, this.month, this.day]);
      this.dayOfWeek = this.m.day();
      ref = this.calculateDayType(this.m, this.dayOfWeek, this.specialDays), this.dayType = ref[0], this.specialDay = ref[1];
    }

    WorkDay.prototype.calculateDayType = function(dt, dayOfWeek, specialDays) {
      var foundSpecialDay, ret;
      if (specialDays != null) {
        foundSpecialDay = specialDays[dt.format()];
      }
      if (foundSpecialDay != null) {
        return ['HOLIDAY', foundSpecialDay];
      }
      ret = 'UNKNOWN';
      if (dayOfWeek > 0 && dayOfWeek < 6) {
        ret = 'WORKDAY';
      } else {
        ret = 'WEEKEND';
      }
      return [ret, null];
    };

    WorkDay.prototype.name = function() {
      if (this.isToday) {
        return 'today';
      } else {
        return this.year + "_" + this.month + "_" + this.day;
      }
    };

    WorkDay.prototype.originalString = function(o) {
      console.log("***************");
      if (o != null) {
        this.oString = o;
        this.isChanged = true;
        if (S(this.oString).isEmpty()) {
          return this.items = [];
        } else {
          return this.parseData(this.oString);
        }
      } else {
        return this.oString;
      }
    };

    WorkDay.prototype.parseData = function(value) {
      if (WorkDayParser.Instance != null) {
        return this.lastParseResult = WorkDayParser.Instance.parse(value);
      }
    };

    WorkDay.prototype.clear = function() {
      return this.items = [];
    };

    WorkDay.prototype.reparse = function() {
      return this.parseData(this.oString);
    };

    WorkDay.prototype.hoursDuration = function() {
      var i, j, len, ref, sum;
      sum = 0;
      ref = this.items;
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        sum += i.hoursDuration;
      }
      return sum;
    };

    WorkDay.prototype.dateTime = function() {
      return this.m;
    };

    WorkDay.prototype.isToday = function() {
      var now;
      now = moment.now();
      return now.isSame(this.m, 'day');
    };

    WorkDay.prototype.to_string = function() {
      return dayOfWeek + ",items:" + this.items.length + ",origString:" + this.oString;
    };

    WorkDay.prototype.addWorkItem = function(workItem) {
      return this.items.push(workItem);
    };

    return WorkDay;

  })();

  module.exports = WorkDay;

}).call(this);
